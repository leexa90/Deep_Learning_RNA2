%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Tue Dec 26 17:35:21 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2v3c_m)
} def

/sequence { (\
GCGGUGGGGGAGCAUCUCCUGUAGGGGAGAUGUAACCCCCUUUACCUGCCGAACCCCGCCAGGCCCGGAAGGGAGCAACGGUAGGCAGGACGUCG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.005651049 ubox
1 40 0.017313832 ubox
1 41 0.008000754 ubox
1 42 0.024107380 ubox
1 43 0.111586267 ubox
1 45 0.015442002 ubox
1 49 0.015847570 ubox
1 86 0.011502551 ubox
1 91 0.037633376 ubox
1 93 0.422517129 ubox
1 94 0.280848733 ubox
2 48 0.015936489 ubox
2 51 0.005290487 ubox
2 85 0.010666354 ubox
2 88 0.005019696 ubox
2 89 0.009375589 ubox
2 92 0.512302503 ubox
2 95 0.127514822 ubox
3 40 0.072074131 ubox
3 41 0.491922080 ubox
3 42 0.118877382 ubox
3 43 0.174378964 ubox
3 45 0.013416461 ubox
3 46 0.031495262 ubox
3 47 0.006010053 ubox
3 50 0.005406981 ubox
3 86 0.003755799 ubox
3 91 0.502616563 ubox
3 93 0.010298765 ubox
3 94 0.136652835 ubox
4 39 0.060408025 ubox
4 40 0.545166562 ubox
4 41 0.150100658 ubox
4 42 0.201884286 ubox
4 43 0.077382502 ubox
4 45 0.036688766 ubox
4 46 0.005430323 ubox
4 49 0.005407515 ubox
4 86 0.003964060 ubox
4 91 0.212928287 ubox
4 93 0.100074356 ubox
4 94 0.018548163 ubox
5 44 0.039533179 ubox
5 48 0.005378212 ubox
5 88 0.003252975 ubox
5 89 0.009934304 ubox
5 90 0.216068419 ubox
5 92 0.047508195 ubox
5 95 0.003284278 ubox
6 38 0.046410514 ubox
6 39 0.643758762 ubox
6 40 0.755549325 ubox
6 41 0.075067936 ubox
6 42 0.004330199 ubox
6 43 0.007999441 ubox
6 91 0.029591543 ubox
7 37 0.044889962 ubox
7 38 0.646770149 ubox
7 39 0.756828338 ubox
7 40 0.081448209 ubox
7 41 0.003200660 ubox
8 36 0.043293217 ubox
8 37 0.647238277 ubox
8 38 0.756582067 ubox
8 39 0.081308009 ubox
8 40 0.003306287 ubox
9 36 0.647672731 ubox
9 37 0.756310538 ubox
9 38 0.081133606 ubox
9 39 0.003273330 ubox
10 36 0.755838438 ubox
10 37 0.080915613 ubox
10 38 0.003233817 ubox
11 33 0.021233406 ubox
12 33 0.994954823 ubox
12 36 0.006071996 ubox
13 32 0.999938874 ubox
14 31 0.999592549 ubox
15 30 0.999747811 ubox
16 29 0.999980926 ubox
17 27 0.007728961 ubox
17 28 0.999815864 ubox
18 26 0.017849667 ubox
18 27 0.999825403 ubox
19 25 0.023980321 ubox
19 26 0.999613330 ubox
20 24 0.025983846 ubox
20 25 0.980597864 ubox
20 26 0.004037759 ubox
39 89 0.031947896 ubox
40 88 0.040394545 ubox
40 89 0.045549768 ubox
40 92 0.018619170 ubox
40 95 0.011218300 ubox
41 87 0.040160833 ubox
41 88 0.045322523 ubox
41 89 0.056473191 ubox
41 90 0.027209779 ubox
41 92 0.030423970 ubox
41 95 0.006154024 ubox
42 87 0.040712855 ubox
42 88 0.071697132 ubox
42 89 0.021917739 ubox
42 90 0.033911990 ubox
42 92 0.062158117 ubox
42 95 0.006851859 ubox
43 87 0.073324824 ubox
43 88 0.019720274 ubox
43 89 0.015902462 ubox
43 90 0.144336627 ubox
43 92 0.030317687 ubox
43 95 0.004204209 ubox
44 93 0.019447137 ubox
45 63 0.005200811 ubox
45 85 0.154405598 ubox
45 88 0.004847962 ubox
45 89 0.982360474 ubox
45 92 0.011030491 ubox
46 62 0.005232441 ubox
46 84 0.155264722 ubox
46 88 0.987236315 ubox
46 89 0.005160787 ubox
47 61 0.005232880 ubox
47 83 0.155436772 ubox
47 87 0.987338676 ubox
47 92 0.003255846 ubox
48 60 0.005141757 ubox
48 82 0.155510458 ubox
48 86 0.987625628 ubox
48 91 0.004291112 ubox
49 81 0.155564012 ubox
49 85 0.987593762 ubox
49 89 0.005528535 ubox
50 58 0.005095054 ubox
50 80 0.155570179 ubox
50 84 0.987242292 ubox
50 85 0.007196230 ubox
50 88 0.005599855 ubox
50 92 0.005650094 ubox
50 95 0.013094938 ubox
51 55 0.007976278 ubox
51 56 0.008394707 ubox
51 57 0.011431105 ubox
51 76 0.036935807 ubox
51 79 0.152650671 ubox
51 82 0.038021181 ubox
51 91 0.005759521 ubox
51 94 0.014020111 ubox
52 82 0.147838753 ubox
52 93 0.013445727 ubox
53 82 0.657105479 ubox
53 93 0.003847118 ubox
54 63 0.019820279 ubox
54 72 0.004484868 ubox
54 73 0.111460619 ubox
54 75 0.089114124 ubox
54 80 0.045947411 ubox
54 81 0.665981706 ubox
54 84 0.003988131 ubox
54 85 0.004506813 ubox
54 88 0.003570906 ubox
54 89 0.005599215 ubox
54 92 0.005172539 ubox
55 62 0.019974848 ubox
55 63 0.013679309 ubox
55 71 0.004447237 ubox
55 72 0.111661074 ubox
55 73 0.112870693 ubox
55 75 0.008566685 ubox
55 80 0.659498530 ubox
55 81 0.143299557 ubox
55 84 0.005030618 ubox
55 85 0.006774435 ubox
55 88 0.005537692 ubox
55 89 0.010771624 ubox
56 62 0.020599277 ubox
56 63 0.287173764 ubox
56 68 0.012855598 ubox
56 71 0.111539924 ubox
56 72 0.114490358 ubox
56 73 0.016278757 ubox
56 75 0.008050940 ubox
56 80 0.137509207 ubox
56 81 0.708022250 ubox
56 84 0.007638192 ubox
56 85 0.005524741 ubox
56 88 0.010819109 ubox
56 89 0.010946324 ubox
57 62 0.291195999 ubox
57 63 0.019970320 ubox
57 67 0.013096285 ubox
57 71 0.114463678 ubox
57 72 0.016212285 ubox
57 75 0.006014451 ubox
57 80 0.714681430 ubox
57 81 0.006320892 ubox
57 84 0.005675758 ubox
57 88 0.010959792 ubox
58 64 0.010711885 ubox
58 66 0.012549608 ubox
58 76 0.444365180 ubox
58 79 0.725537017 ubox
58 82 0.038942809 ubox
58 86 0.015556640 ubox
59 63 0.012158528 ubox
59 68 0.158810116 ubox
59 72 0.008125077 ubox
59 73 0.007471311 ubox
59 75 0.437396378 ubox
59 80 0.007396252 ubox
59 81 0.042580812 ubox
59 85 0.015587503 ubox
60 67 0.158950354 ubox
60 68 0.010430354 ubox
60 71 0.008175925 ubox
60 72 0.007459024 ubox
60 73 0.026534504 ubox
60 75 0.147931894 ubox
60 80 0.042538417 ubox
60 84 0.015566841 ubox
62 66 0.017072241 ubox
62 76 0.152774422 ubox
62 79 0.013457209 ubox
63 76 0.311491998 ubox
63 79 0.005457588 ubox
63 82 0.012225904 ubox
64 68 0.004662723 ubox
64 71 0.005537404 ubox
64 72 0.041881845 ubox
64 73 0.933337124 ubox
64 75 0.308972404 ubox
64 81 0.010826096 ubox
65 71 0.041443068 ubox
65 72 0.935856173 ubox
65 73 0.307871831 ubox
65 80 0.009119671 ubox
65 81 0.009953615 ubox
66 71 0.935633263 ubox
66 72 0.307566975 ubox
66 73 0.031462572 ubox
66 80 0.011529171 ubox
67 76 0.004876926 ubox
67 79 0.012894015 ubox
71 76 0.008113679 ubox
71 79 0.004032326 ubox
72 79 0.007875053 ubox
73 79 0.005800302 ubox
75 79 0.024395565 ubox
75 82 0.009914102 ubox
76 81 0.010040847 ubox
84 94 0.009216577 ubox
85 93 0.009698111 ubox
86 92 0.012578853 ubox
86 95 0.004731704 ubox
88 93 0.003295527 ubox
88 94 0.013665563 ubox
89 93 0.008954809 ubox
89 94 0.017669919 ubox
91 95 0.015327176 ubox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
12 33 0.9500000 lbox
13 32 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
45 89 0.9500000 lbox
46 88 0.9500000 lbox
47 87 0.9500000 lbox
48 86 0.9500000 lbox
49 85 0.9500000 lbox
50 84 0.9500000 lbox
56 81 0.9500000 lbox
57 80 0.9500000 lbox
58 79 0.9500000 lbox
64 73 0.9500000 lbox
65 72 0.9500000 lbox
66 71 0.9500000 lbox
showpage
end
%%EOF
