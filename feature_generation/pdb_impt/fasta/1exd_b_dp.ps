%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Tue Dec 26 17:35:16 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1exd_b)
} def

/sequence { (\
GGGUAUCGCCAAGCGGUAAGGCACCGGAUUCUGAUUCCGGAGGUCGAGGUUCGAAUCCUCGUACCCCAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.014604551 ubox
1 10 0.078031881 ubox
1 14 0.005172649 ubox
1 22 0.029852613 ubox
1 24 0.003966972 ubox
1 25 0.056793711 ubox
1 38 0.077422747 ubox
1 65 0.008203661 ubox
1 66 0.258008319 ubox
1 67 0.281588483 ubox
1 70 0.007648849 ubox
1 71 0.160278344 ubox
2 6 0.009522670 ubox
2 7 0.011216415 ubox
2 9 0.077975942 ubox
2 10 0.055872154 ubox
2 17 0.004025973 ubox
2 22 0.019806137 ubox
2 24 0.056780189 ubox
2 25 0.035190868 ubox
2 37 0.077412759 ubox
2 38 0.062180427 ubox
2 64 0.008148116 ubox
2 65 0.259958884 ubox
2 66 0.280474215 ubox
2 67 0.072223912 ubox
2 70 0.159293438 ubox
2 71 0.185671293 ubox
3 7 0.011003641 ubox
3 9 0.056214582 ubox
3 10 0.003179252 ubox
3 14 0.008528603 ubox
3 17 0.006325105 ubox
3 22 0.083773431 ubox
3 24 0.035451728 ubox
3 36 0.072604038 ubox
3 37 0.062194055 ubox
3 64 0.260832125 ubox
3 65 0.240071156 ubox
3 66 0.072325257 ubox
3 67 0.010839035 ubox
3 70 0.186022080 ubox
3 71 0.005464518 ubox
4 8 0.052677965 ubox
4 13 0.008496176 ubox
4 18 0.870067968 ubox
4 19 0.040632123 ubox
4 20 0.011652221 ubox
4 21 0.077694880 ubox
4 23 0.032238302 ubox
4 63 0.249685843 ubox
4 68 0.073953755 ubox
4 69 0.166761630 ubox
5 17 0.936557328 ubox
5 35 0.093140068 ubox
5 62 0.232739936 ubox
6 16 0.942333730 ubox
6 18 0.012793058 ubox
6 19 0.032059794 ubox
6 20 0.003823802 ubox
6 21 0.019523857 ubox
6 23 0.010685918 ubox
6 34 0.099475298 ubox
6 61 0.205206586 ubox
6 68 0.006470500 ubox
7 13 0.004039708 ubox
7 15 0.957414387 ubox
7 16 0.006999557 ubox
7 20 0.022692417 ubox
7 21 0.003367184 ubox
7 33 0.099544560 ubox
7 61 0.044642920 ubox
8 14 0.957726456 ubox
8 17 0.194904454 ubox
8 22 0.140244433 ubox
8 31 0.011043492 ubox
8 32 0.089267635 ubox
8 44 0.015451071 ubox
8 45 0.003737263 ubox
8 60 0.007191792 ubox
8 66 0.003232466 ubox
8 67 0.003404705 ubox
8 70 0.005356001 ubox
9 13 0.950773120 ubox
9 16 0.200744081 ubox
9 21 0.140403162 ubox
9 27 0.006724650 ubox
9 43 0.016543317 ubox
9 69 0.005359918 ubox
10 15 0.200507019 ubox
10 20 0.140282804 ubox
10 26 0.006633427 ubox
10 42 0.016532857 ubox
11 17 0.006512454 ubox
11 29 0.029687839 ubox
11 30 0.012810210 ubox
12 17 0.017136136 ubox
12 29 0.013272697 ubox
12 30 0.003812367 ubox
13 17 0.016800785 ubox
13 22 0.059241254 ubox
13 29 0.003197792 ubox
13 70 0.013997684 ubox
14 20 0.003931623 ubox
14 21 0.059264245 ubox
14 26 0.099780506 ubox
14 53 0.007347329 ubox
14 69 0.014052155 ubox
15 22 0.005112979 ubox
15 25 0.100777827 ubox
15 52 0.007354789 ubox
15 65 0.005832796 ubox
15 67 0.012218597 ubox
15 71 0.036214271 ubox
16 22 0.019620319 ubox
16 24 0.100873319 ubox
16 51 0.007035074 ubox
16 64 0.006053437 ubox
16 66 0.012189770 ubox
16 70 0.036276674 ubox
17 21 0.018415555 ubox
17 23 0.097836033 ubox
17 63 0.006031519 ubox
17 69 0.035702252 ubox
18 62 0.005701518 ubox
19 32 0.003228387 ubox
19 44 0.004609299 ubox
20 24 0.003422365 ubox
20 25 0.009453272 ubox
20 31 0.003326402 ubox
20 38 0.014606407 ubox
20 44 0.039579441 ubox
20 45 0.275695916 ubox
20 65 0.003273734 ubox
20 66 0.017237318 ubox
20 67 0.054959832 ubox
20 71 0.871615061 ubox
21 25 0.003875562 ubox
21 37 0.014603302 ubox
21 44 0.287158923 ubox
21 45 0.009642394 ubox
21 64 0.003269491 ubox
21 65 0.012908623 ubox
21 66 0.054544208 ubox
21 67 0.003562219 ubox
21 70 0.872525804 ubox
22 42 0.076859906 ubox
22 43 0.287805311 ubox
22 69 0.871625798 ubox
23 35 0.008694008 ubox
23 44 0.004083503 ubox
24 39 0.007476476 ubox
24 40 0.965573301 ubox
24 42 0.003884099 ubox
24 43 0.003861766 ubox
25 33 0.023301619 ubox
25 39 0.976005304 ubox
25 40 0.006543721 ubox
25 42 0.003651733 ubox
26 31 0.003925724 ubox
26 32 0.023313992 ubox
26 37 0.022281205 ubox
26 38 0.993797588 ubox
26 45 0.003458317 ubox
26 58 0.009243019 ubox
26 66 0.003462915 ubox
26 67 0.025040182 ubox
26 71 0.005052685 ubox
27 31 0.022837369 ubox
27 36 0.023546111 ubox
27 37 0.993797078 ubox
27 44 0.003166543 ubox
27 45 0.005684548 ubox
27 57 0.009284904 ubox
27 65 0.003200728 ubox
27 66 0.024992843 ubox
27 70 0.005046747 ubox
28 35 0.076548532 ubox
28 36 0.982333868 ubox
28 44 0.005657945 ubox
28 56 0.009283573 ubox
29 33 0.019045697 ubox
29 34 0.096815476 ubox
29 42 0.006346833 ubox
29 43 0.004155555 ubox
29 55 0.009276659 ubox
30 34 0.153274092 ubox
30 41 0.028419306 ubox
30 54 0.009277959 ubox
31 40 0.029818943 ubox
31 53 0.009193223 ubox
32 39 0.029784178 ubox
33 38 0.029732544 ubox
33 51 0.006161922 ubox
33 52 0.006668076 ubox
34 50 0.006369620 ubox
34 51 0.006626518 ubox
35 49 0.006250256 ubox
36 48 0.005679510 ubox
36 49 0.005836288 ubox
37 48 0.006447332 ubox
37 69 0.004491200 ubox
38 46 0.008787818 ubox
39 45 0.008776683 ubox
39 66 0.018536025 ubox
39 67 0.212661935 ubox
39 71 0.008805215 ubox
40 44 0.005688410 ubox
40 60 0.036917545 ubox
40 65 0.019733825 ubox
40 66 0.219993726 ubox
40 67 0.091335522 ubox
40 70 0.008767840 ubox
41 59 0.041046493 ubox
42 57 0.004221076 ubox
42 58 0.041507674 ubox
42 62 0.003235525 ubox
42 64 0.191916263 ubox
42 65 0.917561802 ubox
42 66 0.089933268 ubox
42 67 0.037582384 ubox
42 71 0.041166807 ubox
43 56 0.004406724 ubox
43 57 0.041350954 ubox
43 62 0.019899207 ubox
43 64 0.926386929 ubox
43 65 0.080806721 ubox
43 66 0.035865637 ubox
43 70 0.041220007 ubox
44 54 0.039185390 ubox
44 55 0.007712059 ubox
44 63 0.916545300 ubox
44 69 0.040552318 ubox
45 53 0.041862081 ubox
45 61 0.956751475 ubox
45 69 0.005164836 ubox
46 52 0.041851338 ubox
46 60 0.996682326 ubox
46 66 0.021286374 ubox
46 67 0.048569277 ubox
47 51 0.036412100 ubox
47 59 0.996658135 ubox
48 57 0.016055421 ubox
48 58 0.996674163 ubox
48 65 0.064874622 ubox
48 66 0.005302034 ubox
49 56 0.021721945 ubox
49 57 0.995493600 ubox
49 58 0.003325292 ubox
49 64 0.065886886 ubox
49 65 0.004749265 ubox
50 54 0.019973096 ubox
50 55 0.120273624 ubox
50 63 0.061692922 ubox
51 55 0.151554189 ubox
51 63 0.003671782 ubox
52 61 0.065980112 ubox
53 60 0.066312917 ubox
54 59 0.062021668 ubox
61 67 0.003466680 ubox
4 18 0.9500000 lbox
5 17 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
20 71 0.9500000 lbox
21 70 0.9500000 lbox
22 69 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
45 61 0.9500000 lbox
46 60 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
showpage
end
%%EOF
