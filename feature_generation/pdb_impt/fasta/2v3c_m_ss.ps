%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Tue Dec 26 17:35:21 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGGUGGGGGAGCAUCUCCUGUAGGGGAGAUGUAACCCCCUUUACCUGCCGAACCCCGCCAGGCCCGGAAGGGAGCAACGGUAGGCAGGACGUCG\
) def
/coor [
[93.54022217 141.39265442]
[84.11435699 138.76502991]
[75.55516052 134.02250671]
[68.32959747 127.42383575]
[62.83185959 119.32901001]
[59.36189270 110.17965698]
[44.39400864 111.16069794]
[29.42612457 112.14174652]
[14.45824146 113.12279510]
[-0.50964242 114.10384369]
[-15.45668221 124.70230103]
[-30.91122818 116.56660461]
[-45.83900070 118.03685760]
[-60.76676941 119.50711823]
[-75.69454193 120.97737122]
[-90.62231445 122.44763184]
[-105.55008698 123.91788483]
[-120.47785187 125.38814545]
[-135.40562439 126.85839844]
[-150.33338928 128.32865906]
[-163.34095764 138.31541443]
[-178.38798523 131.79475403]
[-179.99539185 115.47457123]
[-166.50959778 106.14367676]
[-151.80364990 113.40088654]
[-136.87588501 111.93062592]
[-121.94811249 110.46037292]
[-107.02033997 108.99011230]
[-92.09256744 107.51985931]
[-77.16479492 106.04959869]
[-62.23702621 104.57934570]
[-47.30925751 103.10908508]
[-32.38148499 101.63883209]
[-24.36190414 92.42071533]
[-11.80154991 91.17713928]
[-1.49068940 99.13595581]
[13.47719479 98.15491486]
[28.44507790 97.17386627]
[43.41296387 96.19281769]
[58.38084793 95.21176910]
[65.86729431 75.70926666]
[81.84071350 62.24657059]
[102.32937622 58.17111969]
[122.23884583 64.49626923]
[136.61871338 79.64929199]
[150.82266235 74.82769775]
[165.02661133 70.00611115]
[179.23056030 65.18451691]
[193.43450928 60.36292267]
[207.63847351 55.54133224]
[209.90800476 44.76968384]
[216.48194885 36.04229736]
[226.06417847 30.96456909]
[236.81367493 30.43351555]
[246.69824219 34.48006058]
[253.87854004 42.27625275]
[268.48669434 38.87010574]
[283.09484863 35.46396255]
[286.49258423 20.62426186]
[295.95791626 8.77964783]
[309.57156372 2.24599171]
[324.61019897 2.27091718]
[338.09106445 8.79591942]
[347.36364746 20.47858620]
[361.97180176 17.07244110]
[376.57995605 13.66629791]
[388.17269897 2.06715226]
[403.94210815 6.56799698]
[407.66595459 22.53874969]
[395.51348877 33.55006790]
[379.98608398 28.27445221]
[365.37792969 31.68059731]
[350.76977539 35.08674240]
[347.62057495 49.66576385]
[338.41586304 61.48029709]
[324.93914795 68.15406799]
[309.83969116 68.31536865]
[296.11175537 61.87866211]
[286.50100708 50.07211685]
[271.89285278 53.47826385]
[257.28469849 56.88440704]
[248.50993347 74.08454132]
[229.71485901 79.66536713]
[212.46006775 69.74528503]
[198.25610352 74.56687927]
[184.05215454 79.38846588]
[169.84820557 84.21006012]
[155.64425659 89.03165436]
[141.44030762 93.85324097]
[141.73577881 103.63404083]
[139.75428772 113.21658325]
[135.60392761 122.07806396]
[129.51115417 129.73504639]
[121.80834198 135.76977539]
[112.91574097 139.85304260]
] def
/pairs [
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[56 81]
[57 80]
[58 79]
[64 73]
[65 72]
[66 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
